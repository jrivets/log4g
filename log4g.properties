# Associate log levels with their names
level.10=FATAL
level.11=SEVERE

# Console appender
appender.console.type=log4g/consoleAppender
appender.console.layout=%p %m 

# File appender
appender.file.type=log4g/fileAppender
appender.file.layout=[%d{01-02 15:04:05.000}] %p %c: %m 
appender.file.fileName=console.log
# append parameter defines that new lines will be added to the log file if it already exists or previous context will be lost
appender.file.append=false
# maxFileSize limits the maximum file size (see rotate parameter). The value can be specified as 10M, 2Gib etc.
appender.file.maxFileSize=20000
# maxLines limits maximum number of lines written to the file 
appender.file.maxLines=2000
# rotate defines file rotation policy: 
# "none" - no rotation will happen, the log file will grow with no limits
# "size" - logging message will be written to new file, if file size or number of lines exceeds maximum values
# "daily" - same like "size" + new file is created on daily basis even if limits are not reached.
appender.file.rotate=daily 

# Logger Context for root logger name
context.appenders=console
# buffer specifies the size of channel (Log events) between loggers and appenders
context.buffer=100
# blocking specifies the context behaviour in case of the event channel is full.
# if it is true (default value) then the logger call will be blocked until it can put log event to the channel.
# if it is false, logger will not blocked, but the log event will be lost if the channel is full.
context.blocking=false
# level specifies log level for the context log name (root in this case)
context.level=DEBUG

# this context defined for "a.b" logger name will send log events to 2 appenders
context.a.b.appenders=console,file 


# level - specifies log level for the logger name "a.b.c.d"
logger.a.b.c.d.level=TRACE